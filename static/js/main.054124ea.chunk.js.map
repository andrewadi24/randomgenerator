{"version":3,"sources":["logo.svg","components/Output.js","components/Settings.js","components/Navbar.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Output","useState","visibility","numberofGroups","users","ls","length","i","currentgroup","userindex","Math","floor","random","user","push","splice","elements","members","j","class","Settings","setvisibility","setnumberofGroups","element","setelem","method","onSubmit","e","target","value","split","n","leaders","includes","preventDefault","id","name","type","Navbar","visible","setvisible","onClick","alert","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.054124ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useContext } from 'react'\r\nimport './Output.css'\r\nfunction update(){\r\n    \r\n}\r\nfunction Output() {\r\n    const [visibility, setvisibility] = useState(\"hidden\")\r\n    const [numberofGroups, setnumberofGroups] = useState(4)\r\n    const users = [\"andrew\",\"bob\",\"charlie\",\"doddy\",\"dev\"]\r\n    const ls = []\r\n    ls.length=numberofGroups;\r\n    for(let i = 0; i<ls.length; i++){\r\n        ls[i]=[];\r\n    }\r\n    let currentgroup = 0\r\n    while (true){\r\n        if(users.length==0)break\r\n        else{\r\n            let userindex = Math.floor(Math.random() * users.length)\r\n            let user = users[userindex]\r\n            ls[currentgroup].push(user)\r\n            users.splice(userindex, 1)\r\n            currentgroup++\r\n            if (currentgroup==numberofGroups){\r\n                currentgroup = 0\r\n            }\r\n        }\r\n    }\r\n    const elements = []\r\n    for(let i = 0; i<ls.length; i++){\r\n        let members=[];\r\n        for( let j = 0; j<ls[i].length; j++){\r\n            members.push(<li>{ls[i][j]}</li>)\r\n        }\r\n        elements.push(<div>\r\n            Group {i+1}:{members}\r\n            </div>)\r\n    }\r\n    return (\r\n        <div class={visibility}>\r\n            <h1>Result: </h1>\r\n            <div class=\"result-section\">\r\n            {elements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Output\r\n","import React from 'react'\r\nimport Output from './Output.js'\r\nimport { useState } from 'react'\r\nimport './Settings.js'\r\nimport './Settings.css'\r\nimport './Output.css'\r\nfunction Settings() {\r\n    const [visibility, setvisibility] = useState(\"hidden\")\r\n    const [numberofGroups, setnumberofGroups] = useState(1)\r\n    const [element, setelem] = useState([])\r\n    const onSubmit = (e) => {\r\n        setnumberofGroups(e.target[2].value)\r\n        const users = e.target[1].value.split(\"\\n\")\r\n        while(users[users.length-1]==\"\")users.splice(users.length-1, 1)\r\n        const ls = []\r\n        let n=e.target[2].value\r\n        ls.length=n;\r\n        for(let i = 0; i<ls.length; i++){\r\n            ls[i]=[];\r\n        }\r\n        let currentgroup = 0\r\n        //assign leaders first\r\n        const leaders=[]\r\n        for(let i = 0; i<users.length; i++){\r\n            if(users[i].includes(\"(L)\")){\r\n                leaders.push(users[i])\r\n                users.splice(i, 1)\r\n            }\r\n        }\r\n        for(let i = 0; i<leaders.length; i++){\r\n            ls[currentgroup].push(leaders[i])\r\n            currentgroup++\r\n            if(currentgroup==n)currentgroup=0\r\n        }\r\n        //assign rest of members\r\n        while (true){\r\n            if(users.length==0)break\r\n            else{\r\n                let userindex = Math.floor(Math.random() * users.length)\r\n                let user = users[userindex]\r\n                ls[currentgroup].push(user)\r\n                users.splice(userindex, 1)\r\n                currentgroup++\r\n                if (currentgroup==n){\r\n                    currentgroup = 0\r\n                }\r\n            }\r\n        }\r\n        const elements = []\r\n        for(let i = 0; i<ls.length; i++){\r\n            let members=[];\r\n            for( let j = 0; j<ls[i].length; j++){\r\n                members.push(<li>{ls[i][j]}</li>)\r\n                /* alert(ls[i][j]) */\r\n            }\r\n            elements.push(<div>\r\n                Group {i+1}:<ol>{members}</ol>\r\n                </div>)\r\n        }\r\n        e.preventDefault();\r\n        setvisibility(\"avail\")\r\n        setelem(elements)\r\n        setnumberofGroups(e.target[2].value)\r\n      };\r\n    return (\r\n        <div>\r\n            <div class={visibility}>\r\n                <h1>Result: </h1>\r\n                <div class=\"result-section\">\r\n                {element}\r\n                </div>\r\n            </div>\r\n            <div class = \"settings\">\r\n                <div class=\"inner-settings\">\r\n                    <h1>Edit Settings</h1>\r\n                    <form method=\"get\" onSubmit={onSubmit}>\r\n                        <p>Dataset</p>\r\n                        <select id=\"cars\" name=\"cars\"> <option value=\"volvo\">Team generator</option> <option value=\"saab\">Custom list</option> <option value=\"mercedes\">Random picker</option> <option value=\"audi\">Boolean</option></select>   \r\n                        <h2>Items</h2>\r\n                        <p>Items are split by new line. Please do not leave groups field empty, or \r\n                            the app will crash. Indicate team leaders by typing (L) after their name. For example albert (L)\r\n                        </p>\r\n                        \r\n                        <textarea></textarea>\r\n                        <p>Groups</p>\r\n                        <input type=\"number\" ></input><br/>\r\n                        <button type=\"submit\">Generate</button>\r\n                    </form>\r\n                </div>\r\n                <div class=\"how-to-use\">\r\n                    <h1>How to use:</h1>\r\n                    <ol>\r\n                        <li>Add items to the text area</li>\r\n                        <li>If you have team leaders, indicate it by typing (L) after the name</li>\r\n                        <li>select the number of groups</li>\r\n                        <li>Click on the generate button</li>\r\n                        <li></li>\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","import React from 'react'\r\nimport './Navbar.css'\r\nimport { Squash as Hamburger } from 'hamburger-react'\r\nimport { useState } from 'react'\r\n/* function clickburger(visible){\r\n    if (visible==\"hidden\")setvisible(\"avail\")\r\n    if(visible==\"avail\")setvisible(\"hidden\")\r\n} */\r\nfunction Navbar() {\r\n    const [visible, setvisible] = useState(\"hidden\")\r\n    function clickburger(){\r\n        if (visible==\"hidden\"){\r\n            setvisible(\"how\")\r\n        }\r\n        if(visible==\"how\")setvisible(\"hidden\")\r\n        alert(\"clicked\")\r\n    }\r\n    return (\r\n        <div class=\"navbar\">\r\n            <div class=\"navbar-container\">\r\n            <h1>Random</h1>\r\n            <div class=\"big-screen\">More features coming soon!</div>\r\n            <div class=\"burger\" onClick={clickburger}><Hamburger></Hamburger></div>\r\n            <div class={visible}>\r\n                <h1>More features coming soon!</h1>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport './Footer.css'\r\nfunction Footer() {\r\n    return (\r\n        <div class=\"footer\">\r\n            <div class=\"copyright\">© Random 2021. All Rights Reserved.</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Settings from './components/Settings.js'\nimport Output from './components/Output.js'\nimport Navbar from './components/Navbar.js';\nimport Footer from './components/Footer.js'\nfunction App() {\n  return (\n    <div>\n      <Navbar></Navbar>\n      <div class=\"container\">\n      <Output></Output>\n      <Settings></Settings>\n      </div>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}